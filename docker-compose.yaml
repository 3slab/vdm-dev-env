version: "3.4"

services:
  ##################
  ### SUBMODULES ###
  ##################
  vdm_dev_app:
    container_name: 'vdm_dev_app'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './source/Dockerfile'
    command: ["/bin/sh", "-c", "COMPOSER_MEMORY_LIMIT=-1 composer update --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    #command: ["/bin/sh", "-c", "sleep 10000000"]
    ports:
      - '4000:80'
    volumes:
      - './source/:/var/www/html'
      - './VdmLibraryBundle:/var/www/VdmLibraryBundle'
      - './VdmLibraryHttpTransportBundle:/var/www/VdmLibraryHttpTransportBundle'
      - './VdmLibraryDoctrineTransportBundle:/var/www/VdmLibraryDoctrineTransportBundle'
      - './VdmHealthcheckBundle:/var/www/VdmHealthcheckBundle'
      - './VdmPrometheusBundle:/var/www/VdmPrometheusBundle'
    depends_on:
      - 'vdm_dev_kafka'
      - 'vdm_dev_rabbitmq'
      - 'vdm_dev_mongo'

  vdm_dev_library_bundle:
    container_name: 'vdm_dev_library_bundle'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './VdmLibraryBundle/Dockerfile'
    command: ["/bin/sh", "-c", "composer install --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    volumes:
      - './VdmLibraryBundle/:/var/www/html'

  vdm_dev_http_transport_bundle:
    container_name: 'vdm_dev_http_transport_bundle'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './VdmLibraryBundle/Dockerfile'
    command: ["/bin/sh", "-c", "composer install --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    volumes:
      - './VdmLibraryHttpTransportBundle/:/var/www/html'

  vdm_dev_doctrine_transport_bundle:
    container_name: 'vdm_dev_doctrine_transport_bundle'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './VdmLibraryBundle/Dockerfile'
    command: ["/bin/sh", "-c", "composer install --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    volumes:
      - './VdmLibraryDoctrineTransportBundle/:/var/www/html'

  vdm_dev_healthcheck_bundle:
    container_name: 'vdm_dev_healthcheck_bundle'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './VdmLibraryBundle/Dockerfile'
    command: ["/bin/sh", "-c", "composer install --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    volumes:
      - './VdmHealthcheckBundle/:/var/www/html'

  vdm_dev_prometheus_bundle:
    container_name: 'vdm_dev_prometheus_bundle'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './VdmLibraryBundle/Dockerfile'
    command: ["/bin/sh", "-c", "composer install --no-scripts -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    #command: ["/bin/sh", "-c", "sleep 10000000"]
    volumes:
      - './VdmPrometheusBundle/:/var/www/html'

  ###############
  ### STORAGE ###
  ###############
  vdm_dev_zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    container_name: vdm_dev_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  vdm_dev_kafka:
    image: confluentinc/cp-kafka:6.1.1
    container_name: vdm_dev_kafka
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: vdm_dev_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://vdm_dev_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - vdm_dev_zookeeper

  vdm_dev_kafkacat:
    image: confluentinc/cp-kafkacat:6.1.1
    container_name: vdm_dev_kafkacat
    command: ["/bin/sh", "-c", "sleep 10000000"]
    depends_on:
      - vdm_dev_kafka

  vdm_dev_rabbitmq:
    image: rabbitmq:3-management
    container_name: vdm_dev_rabbitmq
    ports: ["15672:15672"]

  vdm_dev_mongo:
    image: "mongo:4.2.2"
    container_name: "vdm_dev_mongo"
    environment:
      MONGO_INITDB_DATABASE: vdm
      MONGO_INITDB_ROOT_USERNAME: vdm
      MONGO_INITDB_ROOT_PASSWORD: vdm